@model PizzaOrdering.DataLayer.Models.PizzaRequired
@using PizzaOrdering.DataLayer.Models

@{
    ViewData["Title"] = "Edit";

    var orders = ViewBag.Orders as IEnumerable<Order>; 
    var pizzas = ViewBag.Pizzas as IEnumerable<Pizza>;
}

<h1>Edit</h1>

<h4>PizzaRequired</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Update">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="PizzaId" class="control-label">Pizza</label>
                <select asp-for="PizzaId" class="form-control">
                  @foreach (var pizza in pizzas) {
                    <option 
                      value="@pizza.Id"
                    >
                      @pizza.Name
                    </option>
                  }
                </select>
                <span asp-validation-for="PizzaId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OrderId" class="control-label">Order</label>
                <select asp-for="OrderId" class="form-control">
                  @foreach (var order in orders) {
                    <option 
                      value="@order.Id"
                    >
                      @order.Address
                    </option>
                  }
                </select>
                <span asp-validation-for="OrderId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
